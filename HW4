package geekbrains;
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

    private static char [][] map;
    private static final int SIZE = 3;
    private static final char DOT = '•';
    private static final char X_DOT = 'X';
    private static final char O_DOT = 'O';
    private static Scanner scan;


    public static void main(String[] args) {

        initMap();
        printMap();
        switch (new Random().nextInt(2)) {
            case 0: {
                System.out.println("Ходите");
                while (true) {
                    humanTurn();
                    printMap();
                    if (checkWin(X_DOT)) {
                        System.out.println("Вы победили");
                        break;
                    }
                    if (Draw()) {
                        System.out.println("Ничья");
                        break;
                    }
                    computerTurn();
                    printMap();
                    if (checkWin(O_DOT)) {
                        System.out.println("Победил Рандомайзер");
                        break;
                    }
                    if (Draw()) {
                        System.out.println("Ничья");
                        break;
                    }
                }
                break;
            }
            case 1: {
                System.out.println("Первый ход за рандомайзером");
                while (true) {
                    computerTurn();
                    printMap();
                    if (checkWin(O_DOT)) {
                        System.out.println("Победил рандомайзер");
                        break;
                    }
                    if (Draw()) {
                        System.out.println("Ничья");
                        break;
                    }
                    humanTurn();
                    printMap();
                    if (checkWin(X_DOT)) {
                        System.out.println("Вы победили");
                        break;
                    }
                    if (Draw()) {
                        System.out.println("Ничья");
                        break;
                    }
                }
            }
        }
    }



    private static boolean checkWin(char c) {
        int hor, ver;
        int diagMain, diagReverse;
        for (int i = 0; i < SIZE; i++) {
            hor = 0;
            ver = 0;
            for (int j = 0; j < SIZE; j++) {
                if (map[i][j] == c) {                                                                       //Горизонт
                    hor++;
                } else if (map[i][j] != c && hor < SIZE) {
                    hor = 0;
                }
                if (map[j][i] == c) {                                                                       //Вертикаль
                    ver++;
                } else if (map[j][i] != c && ver < SIZE) {
                    ver = 0;
                }
            }
            if (hor >= SIZE || ver >= SIZE) {
                return true;
            }
        }
        for (int j = 0; j < SIZE; j++) {                                                                    // Диагональ
            diagMain = 0;
            for (int i = 0; i < SIZE; i++) {
                if (i < SIZE) {
                    if (map[i][i] == c) {
                        diagMain++;
                    } else if (map[i][i] != c && diagMain < SIZE) {
                        diagMain = 0;
                    }
                }
                if (diagMain >= SIZE) {
                    return true;
                }
            }
        }
        for (int j = 1; j < SIZE; j++) {                                                                      // Побочка
            diagReverse = 0;
            for (int i = 0; i < SIZE; i++) {
                int k = (SIZE) - j - i;
                if (k >= 0) {
                    if (map[i][k] == c) {
                        diagReverse++;
                    } else if (map[i][k] != c && diagReverse < SIZE) {
                        diagReverse = 0;
                    }
                }
                if (diagReverse >= SIZE) {
                    return true;
                }
            }
        }
        return false;
    }
    private static boolean Draw() {
        for (char[] chars : map) {
            for (char aChar : chars) {
                if (aChar == DOT) {
                    return false;
                }
            }
        }
        return true;
    }

    private static void computerTurn() {
        int xCoordinate;
        int yCoordinate;
        do {
            Random random = new Random();
            xCoordinate = random.nextInt(SIZE);
            yCoordinate = random.nextInt(SIZE);
        } while (!isValidCell(xCoordinate, yCoordinate));
        map[yCoordinate][xCoordinate] = O_DOT;
    }
    private static boolean checkDraw() {
        for (char[] chars : map) {
            for (char aChar : chars) {
                if (aChar == DOT) {
                    return false;
                }
            }
        }
        return true;
    }

    private static void humanTurn() {
        int xCoordinate = -1;
        int yCoordinate = -1;
        do {
            System.out.println("Введите координаты в формате x y");
            if (scan.hasNextInt()) {
                xCoordinate = scan.nextInt() - 1;
            }
            if (scan.hasNextInt()) {
                yCoordinate = scan.nextInt() - 1;
            }
            scan.nextLine();
        } while (!isValidCell(xCoordinate, yCoordinate));
        map[yCoordinate][xCoordinate] = X_DOT;
    }

    private static boolean isValidCell(int x, int y) {
        if (x < 0 || y < 0 || x > map.length - 1 || y > map.length - 1) {
            return false;
        }
        return map[y][x] == DOT;
    }

    private static void printMap() {
        for (char[] chars : map) {
            for (char aChar : chars) {
                System.out.print(aChar + " ");
            }
            System.out.println();
        }
    }

    private static void initMap() {
        scan = new Scanner(System.in);
        map = new char[SIZE][SIZE];
        for (char[] chars : map) {
            Arrays.fill(chars, DOT);
        }
    }
}
